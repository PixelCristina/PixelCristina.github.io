---
title: "Assignment4"
execute:
  echo: false
  warning: false
---

```{r}

## Gentle Machine Learning
## Clustering: K-means, Hierarchical Clustering

## Computer purchase example: Animated illustration 
## Adapted from Guru99 tutorial (https://www.guru99.com/r-k-means-clustering.html)
## Dataset: characteristics of computers purchased.
## Variables used: RAM size, Harddrive size

library(dplyr)
library(ggplot2)
library(RColorBrewer)

computers = read.csv("https://raw.githubusercontent.com/guru99-edu/R-Programming/master/computers.csv") 

# Only retain two variables for illustration
rescaled_comp <- computers[4:5] %>%
  mutate(hd_scal = scale(hd),
         ram_scal = scale(ram)) %>%
  select(c(hd_scal, ram_scal))
        
ggplot(data = rescaled_comp, aes(x = hd_scal, y = ram_scal)) +
  geom_point(pch=20, col = "blue") + theme_bw() +
  labs(x = "Hard drive size (Scaled)", y ="RAM size (Scaled)" ) +
  theme(text = element_text(family="Georgia")) 

# install.packages("animation")
library(animation)
set.seed(2345)
library(animation)

# Animate the K-mean clustering process, cluster no. = 4
kmeans.ani(rescaled_comp[1:2], centers = 4, pch = 15:18, col = 1:4) 

## Iris example

# Without grouping by species
ggplot(iris, aes(Petal.Length, Petal.Width)) + geom_point() + 
  theme_bw() +
  scale_color_manual(values=c("firebrick1","forestgreen","darkblue"))

# With grouping by species
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point() + 
  theme_bw() +
  scale_color_manual(values=c("firebrick1","forestgreen","darkblue"))

# Check k-means clusters
## Starting with three clusters and 20 initial configurations
set.seed(20)
irisCluster <- kmeans(iris[, 3:4], 3, nstart = 20)
irisCluster
class(irisCluster$cluster)
# Confusion matrix
table(irisCluster$cluster, iris$Species)
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(iris, aes(Petal.Length, Petal.Width, color = irisCluster$cluster)) + geom_point() +
  scale_color_manual(values=c("firebrick1","forestgreen","darkblue")) +
  theme_bw()
actual = ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point() + 
  theme_bw() +
  scale_color_manual(values=c("firebrick1","forestgreen","darkblue")) +
  theme(legend.position="bottom") +
  theme(text = element_text(family="Georgia")) 
kmc = ggplot(iris, aes(Petal.Length, Petal.Width, color = irisCluster$cluster)) + geom_point() +
  theme_bw() +
  scale_color_manual(values=c("firebrick1", "darkblue", "forestgreen")) +
  theme(legend.position="bottom") +
  theme(text = element_text(family="Georgia")) 
library(grid)
library(gridExtra)
grid.arrange(arrangeGrob(actual, kmc, ncol=2, widths=c(1,1)), nrow=1)


## Wine example

# install.packages("rattle.data")
# wine dataset  contains the results of a chemical analysis of wines 
# grown in a specific area of Italy. Three types of wine are represented in the 
# 178 samples, with the results of 13 chemical analyses recorded for each sample. 
# The Type variable has been transformed into a categorical variable.
# Variables used in this example
# Alcohol
# Malic: Malic acid
# Ash



# Create a function to compute and plot total within-cluster sum of square (withinss)
wssplot <- function(data, nc=15, seed=1234){
  wss <- (nrow(data)-1)*sum(apply(data,2,var))
  for (i in 2:nc){
    set.seed(seed)
    wss[i] <- sum(kmeans(data, centers=i)$withinss)}
  plot(1:nc, wss, type="b", xlab="Number of Clusters",
       ylab="Within groups sum of squares")
}


## Use the factoextra package to do more
# install.packages("factoextra")




## Hierarchical Clustering
## Dataset: USArrests
#  install.packages("cluster")
arrest.hc <- USArrests %>%
  scale() %>%                    # Scale the data
  dist(method = "euclidean") %>% # Compute dissimilarity matrix
  hclust(method = "ward.D2")     # Compute hierarchical clustering



```

```{r}

library(readxl)
Reddit_DATA_for_LinearRegression <- read_excel("~/Desktop/spreadsheets/Reddit_DATA_for LinearRegression.xlsx")

```

```{r}
summary<-summarise(Reddit_DATA_for_LinearRegression)

grouped<- Reddit_DATA_for_LinearRegression %>%
  group_by(Subreddit) %>%
  summarise(avgPolarity = mean(Polarity),avgSubjectivity = mean(Subjectivity))


```

```{r}
# Create a function to compute and plot total within-cluster sum of square (withinss)
clustering_data <- select(grouped, avgPolarity, avgSubjectivity)
wssplot(clustering_data)


```

```{r}
library(dplyr)
library(ggplot2)

# Assuming 'grouped' and 'clustering_data' are already defined from previous steps
# Run k-means clustering
set.seed(123)  # For reproducibility
kmeans_result <- kmeans(clustering_data, centers=3)

# Add cluster assignments to the original data frame
grouped$cluster <- as.factor(kmeans_result$cluster)

# Define centroids
centroids <- as.data.frame(kmeans_result$centers)
colnames(centroids) <- c("avgPolarity", "avgSubjectivity")

# Plot the clusters with points for each data and centroids
ggplot(grouped, aes(x = avgPolarity, y = avgSubjectivity, color = cluster)) +
  geom_point(alpha=0.5, size=3) +  # Plot the data points
  geom_point(data = centroids, aes(x = avgPolarity, y = avgSubjectivity), color = "black", size = 10, shape = 8) +  # Plot centroids
  labs(title = "Cluster Plot with Centroids",
       x = "Average Polarity",
       y = "Average Subjectivity",
       color = "Cluster") +
  theme_minimal() +
  scale_color_brewer(palette = "Set1")  # Use a distinct color palette


```

```{r}
library(ggplot2)
library(dplyr)

# Assuming 'grouped' and 'centroids' are already defined and include the required columns
# Plot the clusters with points for each data, centroids, and add subreddit labels
ggplot(grouped, aes(x = avgPolarity, y = avgSubjectivity, color = cluster)) +
  geom_point(alpha=0.5, size=3) +  # Plot the data points
  geom_point(data = centroids, aes(x = avgPolarity, y = avgSubjectivity), color = "black", size = 10, shape = 8) +  # Plot centroids
  geom_text(aes(label = Subreddit), vjust = 1.5, hjust = 0.5, color = "black", size = 3) +  # Add subreddit labels
  labs(title = "Cluster Plot with Centroids",
       x = "Average Polarity",
       y = "Average Subjectivity",
       color = "Cluster") +
  theme_minimal() +
  scale_color_brewer(palette = "Set1")  # Use a distinct color palette

```

Here i Applied average Subjectivity and Polarity scores of subreddits, they are grouped together using k means clusteing. Looks like an outlier i might have to look at is Apple, movies, prosic and programming.

Some subreddits that seem to have grouped together is

1.  World news, philospohy and askcience
2.  machine learning futorology and machining learning and science
